<?php
 function get_rows($table_name, $fields, $key_field, $limit = 10){
  global $base_path;
# set the database table and initial SelectQuery options
  # $select is a SelectQuery object.
  # @see http://api.drupal.org/api/drupal/includes--database--select.inc/class/Se...
  $select = db_select($table_name, 't');


  # get the desired fields
  # orderByHeader is a TableSort method (http://api.drupal.org/api/drupal/includes--tablesort.inc/function/TableS...)
  #$select->condition('type', 6)
  $select->fields('t', $fields)
         ->orderBy($key_field, 'DESC');  # TODO this call seems to be losing to orderByHeader on page load

  # execute the query
  $results = $select->execute();

  # configure the table rows
  $rows = array();
  foreach ($results as $row) {
    $row_cols = array();

    foreach($fields as $field_name) {
      $row_cols[] = $row->$field_name;
    }

    $row_cols[] = "<a href=\"" . $base_path . "bingo_adm/$table_name?action=edit&$key_field=". $row->$key_field . "\">" . t("Edit") . "</a>&nbsp;|&nbsp;" . 
                  "<a href=\"" . $base_path . "bingo_adm/$table_name?action=delete&$key_field=". $row->$key_field . "\">" . t("Delete") . "</a>";
    //$row_cols[] = "<a href=\"" . $base_path . "bingo_adm?action=delete&$key_field=". $row->$key_field . "\">" . t("Delete") . "</a>";

    $rows[] = $row_cols;
  }
   return $rows;
 }   

 function get_themed_table($table_name, $fields, $key_field, $header, $limit = 10) {
  global $base_path;
  drupal_set_message('get_themed_table');

  # set the database table and initial SelectQuery options
  # $select is a SelectQuery object.
  # @see http://api.drupal.org/api/drupal/includes--database--select.inc/class/Se...
  $select = db_select($table_name, 't')
              ->extend('PagerDefault')
              ->extend('TableSort');

  # get the desired fields
  # orderByHeader is a TableSort method (http://api.drupal.org/api/drupal/includes--tablesort.inc/function/TableS...)
  #$select->condition('type', 6)
  $select->fields('t', $fields)
         ->limit($limit)
         ->orderByHeader($header)
         ->orderBy($key_field, 'DESC');  # TODO this call seems to be losing to orderByHeader on page load

  # execute the query
  $results = $select->execute();

  # configure the table rows
  $rows = array();
  foreach ($results as $row) {
    $row_cols = array();

    foreach($fields as $field_name) {
      $row_cols[] = $row->$field_name;
    }

    $row_cols[] = "<a href=\"" . $base_path . "bingo_adm?action=edit&$key_field=". $row->$key_field . "\">" . t("Edit") . "</a>";
    $row_cols[] = "<a href=\"" . $base_path . "bingo_adm?action=delete&$key_field=". $row->$key_field . "\">" . t("Delete") . "</a>";

    $rows[] = $row_cols;
  }

  $output = theme('table', array('header' => $header,
                                 'rows' => $rows ));
  # add the pager
  $output .= theme('pager');

  return $output;

}
function build_headers_for_data_table($fields){
  $header = array();

  foreach($fields as $field_name) {
    $header[] =  array('data' => t($field_name),   'class' => '',  'datatable_options' => array('bSortable' => TRUE, 'bSearchable' => TRUE));
  }
  
  $header[] = array('data' => t('Options'),   'class' => '',    'datatable_options' => array('bSortable' => FALSE, 'bSearchable' => FALSE));
  
  return $header;
}
function get_themed_data_table($table_name, $fields, $key_field, $header){
  // Table settings.
  $attributes['datatable_options'] = array(
    //'bFilter'   => TRUE,
    'bInfo'     => FALSE,
     // "sScrollY" => 200,
       // "bJQueryUI" => true,
    "bStateSave"  => true,
        "sPaginationType" => "full_numbers"
  );
  // Define table columns

  // Table data.
    
  $rows = get_rows($table_name, $fields, $key_field);

/*
  // Render using Drupal's render API.
  $build['datatable'] = array(
    '#theme' => 'datatable',
    '#header' => $header,
    '#rows' => $rows,
    '#attributes' => $attributes,
  );
*/   
  // Or, render using a theme function.
  $variables = array(
    'attributes' => $attributes,
    'header' => $header,
    'rows' => $rows,
  );
  
  $output = theme('datatable', $variables);

  return $output;
}
function build_form_for_table($title, $table_name, $fields){
  $form = array();
  $form[$table_name] = array(
        '#type' => 'fieldset',
        '#title' => $title,
        '#collapsible' => TRUE, // Added
        '#collapsed' => $collapsed,  // Added
  );

  foreach($fields as $field_name) {
    $form[$table_name][$field_name] = array(
          '#type' => 'textfield', //you can find a list of available types in the form api
          '#title' => $field_name,
          '#attributes' => array(
              'placeholder' => t('Enter the ' . $field_name),
          ),
          '#size' => 40,
          '#maxlength' => 255,
          '#required' => TRUE, //make this field required 
      );
  }
  return $form;
}
function adm_common_filter_form($form, &$form_state) {
  global $base_path;
  $search_text = "";

  $form['filter'] = array(
    '#type' => 'fieldset',
    '#title' => t('Filter'),
    '#attributes' => array('class' => array('container-inline')), 
    '#collapsible' => TRUE, // Added
    '#collapsed' => FALSE,  // Added
  );

 
   $form['filter']['rows'] = array(
    '#title' => t('Show'),
    '#type' => 'select',
    
   // '#description' => t('entries'),
    '#options' => array(10,25,50,100),
  );
  
  $form['filter']['markup'] = array(
    '#type' => 'markup',
    '#markup' => '<div style="width:50%">&nbsp;</div>',
  );
  
  $form['filter']['search_text'] = array(
    '#type' => 'textfield', //you can find a list of available types in the form api
    '#attributes' => array(
        'placeholder' => t('Search by all columns'),
    ),
   //'#attributes' => array('style' => array('float:right')), 
    '#title' => t('Search:'),
    '#size' => 30,
    '#maxlength' => 100,

  );

  if ($search_text != "") {
    $form['filter']['search_text']['#default_value'] = $device_id;
  }

  $form['filter']['submit_search_button'] = array(
    '#type' => 'submit',
    //'#attributes' => array('style' => array('float:right')), 
    '#value' => t('Apply'),
  );
   $form['filter']['clear'] = array(
        '#type' => 'button',
        '#button_type' => 'reset',
        '#name' => 'clear_filter',
        '#submit' => 'false',
        '#value' => t("Clear"),
        //'#attributes' => array(
        //   'onclick' => '$(this).parents("form").attr("allowSubmission", "false"); 
        //        window.location = "' .$base_path . 'bingo_adm";'),
      );
  
  return $form;
}

function adm_common_filter_form_submit($form, &$form_state) {
  global $base_path;
  drupal_set_message('adm_common_filter_form_submit');
  dpr($form);
      if (isset($form_state['values']['search_text'])) {
        $search_text = $form_state['values']['search_text'];
         drupal_set_message($search_text);
      }
     
}
?>
